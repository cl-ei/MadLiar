{
    "category": "学习笔记", 
    "layout": "post", 
    "description": "MySQL的常用查询方法", 
    "tags": [
        "MySQL"
    ], 
    "title": "MySQL(4):常用查询方法", 
    "first_figure": "/static/blog/img/blog/20170127/0.jpg", 
    "content": "\n## MySQL的常用查询方法\n\nMySQL的查询语句主要以select为主。下面为主要的查询语句。\n\n基本语法：\n\n```\nSELECT * FROM tb_name [WHERE CONDITION] \n```\n\n1、将表的数据全部列出\n\n```\nSELECT * FROM tb_name\n```\n\n2、列出表的部分字段\n\n```\nSELECT field_1,field_2 ... FROM tb_name\n```\n例如：\n```\nmysql> desc main_info;\n+----------+-------------+------+-----+---------+-------+\n| Field    | Type        | Null | Key | Default | Extra |\n+----------+-------------+------+-----+---------+-------+\n| id       | int(2)      | YES  |     | NULL    |       |\n| name     | varchar(10) | YES  |     | NULL    |       |\n| age      | int(2)      | YES  |     | NULL    |       |\n| birthday | date        | YES  |     | NULL    |       |\n| workyear | int(2)      | YES  |     | NULL    |       |\n+----------+-------------+------+-----+---------+-------+\n\nmysql> select id,name from main_info;\n+------+----------+\n| id   | name     |\n+------+----------+\n|    1 | caoliang |\n|    2 | liang    |\n|    3 | zhangsan |\n+------+----------+\n```\n\n3、查询不重复的记录\n```\nSELECT DISTINCT field FROM tb_name\n```\n\n4、排序和限制\n\n\n```\nSELECT * FROM tb_name [WHERE CONDITION] [ORDER BY field_1 [DESC/ASC],feild_2 [DESC/ASC] ... ]\n```\n\n其中DESC 为降序排列，ASC为升序排列，不指定则默认升序。后面可以跟多个字段，当有多条记录的第一个字段的值相同时，则按照语句规定的第二个字段的规则进行排序，否则这些记录将随机排序。例如：(注意id和workyear的排序)\n\n```\nmysql> select * from main_info ;                \n+------+----------+------+------------+----------+\n| id   | name     | age  | birthday   | workyear |\n+------+----------+------+------------+----------+\n|    1 | caoliang |   22 | 2015-09-16 |       10 |\n|    2 | liang    |   21 | 2015-09-16 |       10 |\n|    3 | zhangsan |   25 | 2015-09-16 |        9 |\n|    4 | liang    |   21 | 2015-09-16 |       12 |\n|    3 | lisi     |   25 | 2015-09-16 |       11 |\n+------+----------+------+------------+----------+\n\nmysql> select * from main_info order by id desc,workyear asc;\n+------+----------+------+------------+----------+\n| id   | name     | age  | birthday   | workyear |\n+------+----------+------+------------+----------+\n|    4 | liang    |   21 | 2015-09-16 |       12 |\n|    3 | zhangsan |   25 | 2015-09-16 |        9 |\n|    3 | lisi     |   25 | 2015-09-16 |       11 |\n|    2 | liang    |   21 | 2015-09-16 |       10 |\n|    1 | caoliang |   22 | 2015-09-16 |       10 |\n+------+----------+------+------------+----------+\n\nmysql> select * from main_info order by id desc,workyear desc;\n+------+----------+------+------------+----------+\n| id   | name     | age  | birthday   | workyear |\n+------+----------+------+------------+----------+\n|    4 | liang    |   21 | 2015-09-16 |       12 |\n|    3 | lisi     |   25 | 2015-09-16 |       11 |\n|    3 | zhangsan |   25 | 2015-09-16 |        9 |\n|    2 | liang    |   21 | 2015-09-16 |       10 |\n|    1 | caoliang |   22 | 2015-09-16 |       10 |\n+------+----------+------+------------+----------+\n```\n\n5、隐藏部分记录\n\n```\nSELECT * FROM tb_name [LIMIT offset_start,row_count]\n```\nLIMIT的第一个参数为起始的行，默认为0，显示从起始行开始row_count行的记录。需要注意的是，它通常搭配ORDER BY命令一起使用，提供分页浏览的功能。\n\n6、聚合操作\n```\nSELECT field_1,field_2 ... fun_name FROM tb_name\n[WHERE CONDITION]\n[GROUP BY field_1,field_2 ... [WITH ROLLUP] ]\n[HAVING CONDITION]\n```\n\n上述的```fun_name```是聚合操作函数，例如求和操作```sum```，记录数```count```等。\n\"GROUP BY\"表示分类的字段，比如统计相同姓名的人：\n```\nmysql> select  name,count(1) from main_info group by name WITH ROLLUP;\n+----------+----------+\n| name     | count(1) |\n+----------+----------+\n| caoliang |        1 |\n| liang    |        2 |\n| lisi     |        1 |\n| zhangsan |        1 |\n| NULL     |        5 |\n+----------+----------+\n```\n而```WITH ROLLUP```表示在分类之后，将数据再聚合。可以看到上述最后一行，就是```WITH ROLLUP```输出的结果。\n\n", 
    "create_time": "2015年1月28日", 
    "preview": "\n## MySQL的常用查询方法\n\nMySQL的查询语句主要以select为主。下面为主要的查询语句。\n\n基本语法：\n\n```\nSELECT * FROM tb_name [WHERE CONDITION] \n```\n\n1、将表的数据全部列出\n\n```\nSELECT * FROM tb_name\n```\n\n2、列出表的部分字段\n\n```\nSELECT field_1,field_2 ... FROM tb_name\n```\n例如：\n```\nmysql> desc main_info;\n+----------+-------------+------+-----+---------+-------+\n| Field    | Type        | Null | Key | Default | Extra |\n+----------+-------------+------+-----+---------+-------+\n| id       | int(2)      | YES  |     | NULL    |       |\n| name     | varchar(10) | YES  |     | NULL    |       |\n| age      | int(2)      | YES  |     | NULL    |       |\n| birthday | date        | YES  |     | NULL    |       |\n| workyear | int(2)      | YES  |     | NULL    |       |\n+----------+-------------+------+-----+---------+-------+\n\nmysql> select id,name from main_info;\n+------+----------+\n| id   | name     |\n+------+----------+\n|    1 | caoliang |\n|    2 | liang    |\n|    3 | zhangsan |\n+------+----------+\n```\n\n3、查询不重复的记录\n```\nSELECT DISTINCT field FROM tb_name\n```\n\n4、排序和限制\n\n\n```\nSELECT * FROM tb_name [WHERE CONDITION] [ORDER BY field_1 [DESC/ASC],feild_2 [DESC/ASC] ... ]\n```\n\n其中DESC 为降序排列，ASC为升序排列，不指定则默认升序。后面可以跟多个字段，当有多条记录的第一个字段的值相同时，则按照语句规定的第二个字段的规则进行排序，否则这些记录将随机排序。例如：(注意id和workyear的排序)\n\n```\nmysql> select * from main_info ;                \n+------+----------+------+------------+----------+\n| id   | name     | age  | birthday   | workyear |\n+------+----------+------+------------+----------+\n|    1 | caoliang |   22 | 2015-09-16 |       10 |\n|    2 | liang    |   21 | 2015-09-16 |       10 |\n|    3 | zhangsan |   25 | 2015-09-16 |        9 |\n|    4 | liang    |   21 | 2015-09-16 |       12 |\n|    3 | lisi     |   25 | 2015-09-16 |       11 |\n+------+----------+------+------------+----------+\n\nmysql> select * from main_info order by id desc,workyear asc;\n+------+----------+------+------------+----------+\n| id   | name     | age  | birthday   | workyear |\n+------+----------+------+------------+----------+\n|    4 | liang    |   21 | 2015-09-16 |       12 |\n|    3 | zhangsan |   25 | 2015-09-16 |        9 |\n|    3 | lisi     |   25 | 2015-09-16 |       11 |\n|    2 | liang    |   21 | 2015-09-16 |       10 |\n|    1 | caoliang |   22 | 2015-09-16 |       10 |\n+------+----------+------+------------+----------+\n\nmysql> select * from main_info order by id desc,workyear desc;\n+------+----------+------+------------+----------+\n| id   | name     | age  | birthday   | workyear |\n+------+----------+------+------------+----------+\n|    4 | liang    |   21 | 2015-09-16 |       12 |\n|    3 | lisi     |   25 | 2015-09-16 |       11 |\n|    3 | zhangsan |   25 | 2015-09-16 |        9 |\n|    2 | liang    |   21 | 2015-09-16 |       10 |\n|    1 | caoliang |   22 | 2015-09-16 |       10 |\n+------+----------+------+------------+----------+\n```\n\n5、隐藏部分记录\n\n```\nSELECT * FROM tb_name [LIMIT offset_start,row_count]\n```\nLIMIT的第一个参数为起始的行，默认为0，显示从起始行开始row_count行的记录。需要注意的是，它通常搭配ORDER BY命令一起使用，提供分页浏览的功能。\n\n6、聚合操作\n```\nSELECT field_1,field_2 ... fun_name FROM tb_name\n[WHERE CONDITION]\n[GROUP BY field_1,field_2 ... [WITH ROLLUP] ]\n[HAVING CONDITION]\n```\n\n上述的```fun_name```是聚合操作函数，例如求和操作```sum```，记录数```count```等。\n\"GROUP BY\"表示分类的字段，比如统计相同姓名的人：\n```\nmysql> select  name,count(1) from main_info group by name WITH ROLLUP;\n+----------+----------+\n| name     | count(1) |\n+----------+----------+\n| caoliang |        1 |\n| liang    |        2 |\n| lisi     |        1 |\n| zhangsan |        1 |\n| NULL     |        5 |\n+----------+----------+\n```\n而```WITH ROLLUP```表示在分类之后，将数据再聚合。可以看到上述最后一行，就是```WITH ROLLUP```输出的结果。\n\n", 
    "id": 20150128
}